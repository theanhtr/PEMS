--
-- Script was generated by Devart dbForge Studio for MySQL, Version 10.0.225.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 11/8/2024 6:53:01 AM
-- Server version: 8.0.39
--

--
-- Disable foreign keys
--
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

--
-- Set SQL mode
--
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

--
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8mb4';

--
-- Set default database
--
USE predict;

--
-- Drop procedure `Proc_AllTable_Count`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_Count;

--
-- Drop procedure `Proc_AllTable_Delete`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_Delete;

--
-- Drop procedure `Proc_AllTable_DeleteList`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_DeleteList;

--
-- Drop procedure `Proc_AllTable_GetAll`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_GetAll;

--
-- Drop procedure `Proc_AllTable_GetAllByColumnName`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_GetAllByColumnName;

--
-- Drop procedure `Proc_AllTable_GetByCode`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_GetByCode;

--
-- Drop procedure `Proc_AllTable_GetById`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_GetById;

--
-- Drop procedure `Proc_AllTable_GetListByColumnValues`
--
DROP PROCEDURE IF EXISTS Proc_AllTable_GetListByColumnValues;

--
-- Drop table `crop`
--
DROP TABLE IF EXISTS crop;

--
-- Drop table `crop_stage`
--
DROP TABLE IF EXISTS crop_stage;

--
-- Drop table `level_warning`
--
DROP TABLE IF EXISTS level_warning;

--
-- Drop table `pest`
--
DROP TABLE IF EXISTS pest;

--
-- Drop table `pest_stage`
--
DROP TABLE IF EXISTS pest_stage;

--
-- Drop procedure `Proc_Predict_Filter`
--
DROP PROCEDURE IF EXISTS Proc_Predict_Filter;

--
-- Drop procedure `Proc_Predict_Insert`
--
DROP PROCEDURE IF EXISTS Proc_Predict_Insert;

--
-- Drop procedure `Proc_Predict_Update`
--
DROP PROCEDURE IF EXISTS Proc_Predict_Update;

--
-- Drop table `predict`
--
DROP TABLE IF EXISTS predict;

--
-- Set default database
--
USE predict;

--
-- Create table `predict`
--
CREATE TABLE predict (
  PredictId char(36) NOT NULL,
  ProvinceId varchar(255) DEFAULT NULL,
  ProvinceName varchar(255) DEFAULT NULL,
  DistrictId varchar(255) DEFAULT NULL,
  DistrictName varchar(255) DEFAULT NULL,
  WardId varchar(255) DEFAULT NULL,
  WardName varchar(255) DEFAULT NULL,
  Address varchar(255) DEFAULT NULL,
  CurrentStartDate datetime DEFAULT NULL,
  CurrentEndDate datetime DEFAULT NULL,
  CropId char(36) DEFAULT NULL,
  CropName varchar(255) DEFAULT NULL,
  PestId char(36) DEFAULT NULL,
  PestName varchar(255) DEFAULT NULL,
  PreviousEndDate datetime DEFAULT NULL,
  PreviousLevelWarningId char(36) DEFAULT NULL,
  PreviousLevelWarningName varchar(255) DEFAULT NULL,
  CropStageName varchar(255) DEFAULT NULL,
  CropStageId char(36) DEFAULT NULL,
  PestStageName varchar(255) DEFAULT NULL,
  PestStageId char(36) DEFAULT NULL,
  LevelWarningName varchar(255) DEFAULT NULL,
  LevelWarningId char(36) DEFAULT NULL,
  SeasonEnd tinyint(1) DEFAULT 0,
  DailyForecast longtext DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  PRIMARY KEY (PredictId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'bảng dự báo',
ROW_FORMAT = DYNAMIC;

DELIMITER $$

--
-- Create procedure `Proc_Predict_Update`
--
CREATE PROCEDURE Proc_Predict_Update (IN v_PredictId char(36), IN v_ProvinceId varchar(255), IN v_ProvinceName varchar(255), IN v_DistrictId varchar(255), IN v_DistrictName varchar(255), IN v_WardId varchar(255), IN v_WardName varchar(255), IN v_Address varchar(255), IN v_CurrentStartDate datetime, IN v_CurrentEndDate datetime, IN v_PreviousEndDate datetime, IN v_PreviousLevelWarningId char(36), IN v_CropStageId char(36), IN v_PestStageId char(36), IN v_LevelWarningId char(36), IN v_ModifiedDate datetime, IN v_ModifiedBy varchar(255), IN v_SeasonEnd tinyint(1), IN v_id char(36), IN v_PreviousLevelWarningName varchar(255), IN v_CropStageName varchar(255), IN v_PestStageName varchar(255), IN v_LevelWarningName varchar(255), IN v_CropId char(36), IN v_CropName varchar(255), IN v_PestId char(36), IN v_PestName varchar(255), IN v_DailyForecast longtext)
SQL SECURITY INVOKER
COMMENT 'Procedure cập nhật thông tin dự đoán.'
BEGIN
  UPDATE predict p
  SET p.PredictId = v_PredictId,
      p.ProvinceId = v_ProvinceId,
      p.ProvinceName = v_ProvinceName,
      p.DistrictId = v_DistrictId,
      p.DistrictName = v_DistrictName,
      p.WardId = v_WardId,
      p.WardName = v_WardName,
      p.Address = v_Address,
      p.CurrentStartDate = v_CurrentStartDate,
      p.CurrentEndDate = v_CurrentEndDate,
      p.PreviousEndDate = v_PreviousEndDate,
      p.PreviousLevelWarningId = v_PreviousLevelWarningId,
      p.CropStageId = v_CropStageId,
      p.PestStageId = v_PestStageId,
      p.LevelWarningId = v_LevelWarningId,
      p.ModifiedDate = v_ModifiedDate,
      p.ModifiedBy = v_ModifiedBy,
      p.PreviousLevelWarningName = v_PreviousLevelWarningName,
      p.CropStageName = v_CropStageName,
      p.PestStageName = v_PestStageName,
      p.LevelWarningName = v_LevelWarningName,
      p.SeasonEnd = v_SeasonEnd,
      p.CropId = v_CropId,
      p.CropName = v_CropName,
      p.PestId = v_PestId,
      p.PestName = v_PestName,
      p.DailyForecast = v_DailyForecast
  WHERE p.PredictId = v_id;
END
$$

--
-- Create procedure `Proc_Predict_Insert`
--
CREATE PROCEDURE Proc_Predict_Insert (IN v_PredictId char(36), IN v_ProvinceId varchar(255), IN v_ProvinceName varchar(255), IN v_DistrictId varchar(255), IN v_DistrictName varchar(255), IN v_WardId varchar(255), IN v_WardName varchar(255), IN v_Address varchar(255), IN v_CurrentStartDate datetime, IN v_CurrentEndDate datetime, IN v_PreviousEndDate datetime, IN v_PreviousLevelWarningId char(36), IN v_CropStageId char(36), IN v_PestStageId char(36), IN v_LevelWarningId char(36), IN v_SeasonEnd tinyint(1), IN v_CreatedDate datetime, IN v_CreatedBy varchar(255), IN v_PreviousLevelWarningName varchar(255), IN v_CropStageName varchar(255), IN v_PestStageName varchar(255), IN v_LevelWarningName varchar(255), IN v_CropId char(36), IN v_CropName varchar(255), IN v_PestId char(36), IN v_PestName varchar(255), IN v_DailyForecast json)
SQL SECURITY INVOKER
COMMENT 'Procedure thêm dự đoán.'
BEGIN
  INSERT INTO predict (PredictId, ProvinceId, ProvinceName, DistrictId, DistrictName, WardId, WardName, Address, CurrentStartDate, CurrentEndDate, PreviousEndDate, PreviousLevelWarningId, CropStageId, PestStageId, LevelWarningId, SeasonEnd, CreatedDate, CreatedBy, PreviousLevelWarningName, CropStageName, PestStageName, LevelWarningName, CropId, CropName, PestId, PestName, DailyForecast)
    VALUES (v_PredictId, v_ProvinceId, v_ProvinceName, v_DistrictId, v_DistrictName, v_WardId, v_WardName, v_Address, v_CurrentStartDate, v_CurrentEndDate, v_PreviousEndDate, v_PreviousLevelWarningId, v_CropStageId, v_PestStageId, v_LevelWarningId, v_SeasonEnd, v_CreatedDate, v_CreatedBy, v_PreviousLevelWarningName, v_CropStageName, v_PestStageName, v_LevelWarningName, v_CropId, v_CropName, v_PestId, v_PestName, v_DailyForecast);
END
$$

--
-- Create procedure `Proc_Predict_Filter`
--
CREATE PROCEDURE Proc_Predict_Filter (IN v_ProvinceId varchar(255), IN v_DistrictId varchar(255), IN v_WardId varchar(255), IN v_StartDate datetime, IN v_EndDate datetime, IN v_CropStageId char(36), IN v_PestStageId char(36), IN v_SeasonEnd tinyint(1), IN v_PageSize int, IN v_PageNumber int, IN v_PestId char(36), IN v_CropId char(36))
SQL SECURITY INVOKER
COMMENT 'Procedure lọc thông tin dự đoán theo điều kiện và trả về tổng số lượng.'
BEGIN
  DECLARE startIndex int;
  SET startIndex = (v_PageNumber - 1) * v_PageSize;

  -- Truy vấn dữ liệu với phân trang
  SELECT
    *
  FROM predict p
  WHERE (v_ProvinceId IS NULL
  OR v_ProvinceId = ''
  OR p.ProvinceId = v_ProvinceId)
  AND (v_DistrictId IS NULL
  OR v_DistrictId = ''
  OR p.DistrictId = v_DistrictId)
  AND (v_WardId IS NULL
  OR v_WardId = ''
  OR p.WardId = v_WardId)
  AND (v_StartDate IS NULL
  OR p.CurrentStartDate >= v_StartDate)
  AND (v_EndDate IS NULL
  OR p.CurrentEndDate <= v_EndDate)
  AND (v_CropStageId IS NULL
  OR v_CropStageId = ''
  OR p.CropStageId = v_CropStageId)
  AND (v_PestStageId IS NULL
  OR v_PestStageId = ''
  OR p.PestStageId = v_PestStageId)
  AND (v_SeasonEnd IS NULL
  OR p.SeasonEnd = v_SeasonEnd)
  LIMIT startIndex, v_PageSize;

  -- Truy vấn tổng số lượng bản ghi
  SELECT
    COUNT(*) AS Total
  FROM predict p
  WHERE (v_ProvinceId IS NULL
  OR v_ProvinceId = ''
  OR p.ProvinceId = v_ProvinceId)
  AND (v_DistrictId IS NULL
  OR v_DistrictId = ''
  OR p.DistrictId = v_DistrictId)
  AND (v_WardId IS NULL
  OR v_WardId = ''
  OR p.WardId = v_WardId)
  AND (v_StartDate IS NULL
  OR p.CurrentStartDate >= v_StartDate)
  AND (v_EndDate IS NULL
  OR p.CurrentEndDate <= v_EndDate)
  AND (v_CropStageId IS NULL
  OR v_CropStageId = ''
  OR p.CropStageId = v_CropStageId)
  AND (v_PestStageId IS NULL
  OR v_PestStageId = ''
  OR p.PestStageId = v_PestStageId)
  AND (v_SeasonEnd IS NULL
  OR p.SeasonEnd = v_SeasonEnd)
  ;
END
$$

DELIMITER ;

--
-- Create table `pest_stage`
--
CREATE TABLE pest_stage (
  PestStageId char(36) NOT NULL,
  PestId char(36) DEFAULT NULL COMMENT 'Khóa ngoại bảng pest',
  PestStageName varchar(255) DEFAULT NULL,
  T0 double DEFAULT NULL COMMENT 'Nhiệt độ phát dục (t0)',
  K1 double DEFAULT NULL COMMENT 'K từng giai đoạn (K1)',
  K double DEFAULT NULL COMMENT 'Tổng tích ôn hữu hiệu (K)',
  PRIMARY KEY (PestStageId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 963,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Bảng lưu thông tin giai đoạn của sâu bệnh',
ROW_FORMAT = DYNAMIC;

--
-- Create table `pest`
--
CREATE TABLE pest (
  PestId char(36) NOT NULL,
  PestName varchar(255) DEFAULT NULL,
  ShortName varchar(255) DEFAULT NULL,
  Description longtext DEFAULT NULL,
  ImageURL longtext DEFAULT NULL,
  PRIMARY KEY (PestId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Bảng lưu trữ thông tin sâu bệnh',
ROW_FORMAT = DYNAMIC;

--
-- Create table `level_warning`
--
CREATE TABLE level_warning (
  LevelWarningId char(36) NOT NULL,
  LevelWarningName varchar(255) DEFAULT NULL,
  CropStageId char(36) DEFAULT NULL,
  PestStageId char(36) DEFAULT NULL,
  PestId char(36) DEFAULT NULL,
  CropId char(36) DEFAULT NULL,
  PRIMARY KEY (LevelWarningId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 682,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Bảng mức độ cảnh báo (giai đoạn sâu bệnh + giai đoạn cây trồng)',
ROW_FORMAT = DYNAMIC;

--
-- Create table `crop_stage`
--
CREATE TABLE crop_stage (
  CropStageId char(36) NOT NULL,
  CropId char(36) DEFAULT NULL,
  CropStageName varchar(255) DEFAULT NULL COMMENT 'Khóa ngoại cây trồng',
  PRIMARY KEY (CropStageId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Giai đoạn cây trồng',
ROW_FORMAT = DYNAMIC;

--
-- Create table `crop`
--
CREATE TABLE crop (
  CropId char(36) NOT NULL,
  CropName varchar(255) DEFAULT NULL,
  ShortName varchar(255) DEFAULT NULL,
  Description longtext DEFAULT NULL,
  ImageURL longtext DEFAULT NULL,
  PRIMARY KEY (CropId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Bảng lưu thông tin cây trồng',
ROW_FORMAT = DYNAMIC;

DELIMITER $$

--
-- Create procedure `Proc_AllTable_GetListByColumnValues`
--
CREATE PROCEDURE Proc_AllTable_GetListByColumnValues (IN `tableName` varchar(255), IN `columnName` varchar(255), IN `values` text)
SQL SECURITY INVOKER
COMMENT 'Procedure lấy ra danh sách bản ghi theo một chuỗi các giá trị của một trường.'
BEGIN
  SET @query = CONCAT('SELECT * FROM ', tableName, ' entity WHERE entity.', columnName, ' IN (', `values`, ')');
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `Proc_AllTable_GetById`
--
CREATE PROCEDURE Proc_AllTable_GetById (IN `tableName` varchar(255), IN `tableId` varchar(255), IN `id` char(36))
SQL SECURITY INVOKER
COMMENT 'Procedure lấy một bản ghi theo id.'
BEGIN
  SET @query = CONCAT('SELECT * FROM ', tableName, ' entity WHERE entity.', tableId, ' = \'', id, '\'');
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `Proc_AllTable_GetByCode`
--
CREATE PROCEDURE Proc_AllTable_GetByCode (IN `tableName` varchar(255), IN `tableCode` varchar(255), IN `code` varchar(20))
SQL SECURITY INVOKER
COMMENT 'Procedure lấy bản ghi theo mã code.'
BEGIN
  SET @query = CONCAT('SELECT * FROM ', tableName, ' entity WHERE entity.', tableCode, ' = \'', code, '\'');
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `Proc_AllTable_GetAllByColumnName`
--
CREATE PROCEDURE Proc_AllTable_GetAllByColumnName (IN `tableName` varchar(255), IN `columnName` varchar(255))
SQL SECURITY INVOKER
COMMENT 'Procedure lấy tất cả bản ghi của một bảng nhưng chỉ lấy một cột.'
BEGIN
  SET @query = CONCAT('SELECT ', columnName, ' FROM ', tableName);
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `Proc_AllTable_GetAll`
--
CREATE PROCEDURE Proc_AllTable_GetAll (IN `tableName` varchar(255))
SQL SECURITY INVOKER
COMMENT 'Procedure lấy tất cả bản ghi trong 1 bảng.'
BEGIN
  SET @query = CONCAT('SELECT * FROM ', tableName);
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `Proc_AllTable_DeleteList`
--
CREATE PROCEDURE Proc_AllTable_DeleteList (IN `tableName` varchar(255), IN `tableId` varchar(255), IN `ids` text)
SQL SECURITY INVOKER
COMMENT 'Procedure xóa nhiều bản ghi theo id.'
BEGIN
  SET @query = CONCAT('DELETE FROM ', tableName, ' WHERE ', tableId, ' IN (', ids, ')');
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `Proc_AllTable_Delete`
--
CREATE PROCEDURE Proc_AllTable_Delete (IN `tableName` varchar(255), IN `tableId` varchar(255), IN `id` char(36))
SQL SECURITY INVOKER
COMMENT 'Procedure xóa 1 bản ghi.'
BEGIN
  SET @query = CONCAT('DELETE FROM ', tableName, ' WHERE ', tableId, ' = \'', id, '\'');
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `Proc_AllTable_Count`
--
CREATE PROCEDURE Proc_AllTable_Count (IN `tableName` varchar(255))
SQL SECURITY INVOKER
COMMENT 'Procedure để đếm số bản ghi trong 1 bảng.'
BEGIN
  SET @query = CONCAT('SELECT COUNT(1) FROM ', tableName);
  PREPARE stmt FROM @query;
  EXECUTE stmt;

  /* giải phóng tài nguyên */
  DEALLOCATE PREPARE stmt;
END
$$

DELIMITER ;

-- 
-- Dumping data for table predict
--
INSERT INTO predict VALUES
('8311fe01-6395-4d42-a017-e6a01fa8ba34', '26', 'Tỉnh Vĩnh Phúc', '251', 'Huyện Yên Lạc', '09061', 'Xã Trung Kiên', NULL, '2020-09-12 19:07:00', '2024-11-07 19:08:01', '961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây ngô', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu keo mùa thu', '2020-01-30 19:07:00', '347a04c3-cc03-4bda-94bb-965de90d0401', 'Mức 2', NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, '2024-11-07 19:07:56', 'Trần Thế Anh', NULL, NULL),
('a38a5ea0-3350-4e53-be9c-b849130a6995', '92', 'Thành phố Cần Thơ', '926', 'Huyện Phong Điền', '31312', 'Xã Mỹ Khánh', NULL, '2024-11-07 19:07:00', NULL, '961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây ngô', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu keo mùa thu', '2024-11-06 19:07:00', '347a04c3-cc03-4bda-94bb-965de90d0401', 'Mức 2', NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, '2024-11-07 19:07:21', 'Trần Thế Anh', NULL, NULL),
('a572914f-36ab-490c-bc21-06d357c368d3', '01', 'Thành phố Hà Nội', '277', 'Huyện Chương Mỹ', '10015', 'Thị trấn Chúc Sơn', NULL, '2024-11-07 07:31:07', NULL, '961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây ngô', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu keo mùa thu', '2024-11-06 07:31:00', '347a04c3-cc03-4bda-94bb-965de90d0404', 'Mức 3', NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, '2024-11-07 07:31:13', 'Chuyên gia', NULL, NULL),
('c9c34d8b-666a-4552-b2b1-945ac766e5e4', '26', 'Tỉnh Vĩnh Phúc', '251', 'Huyện Yên Lạc', '09061', 'Xã Trung Kiên', 'Xóm 2', '2024-11-04 06:59:00', NULL, '961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây ngô', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu keo mùa thu', '2024-11-03 21:26:00', '347a04c3-cc03-4bda-94bb-965de90d0403', 'Mức 1', NULL, NULL, NULL, NULL, NULL, NULL, 0, '[{"stage": "Tr\\u1ee9ng", "stage_id": "61b59d63-79ff-4959-b34b-18c30f3fb5ae", "temp": 24, "rain": 0, "humidity": 77, "date": "2024-11-04"}, {"stage": "Tr\\u1ee9ng", "stage_id": "61b59d63-79ff-4959-b34b-18c30f3fb5ae", "temp": 23.2, "rain": 8, "humidity": 82, "date": "2024-11-05"}, {"stage": "Tr\\u1ee9ng", "stage_id": "61b59d63-79ff-4959-b34b-18c30f3fb5ae", "temp": 24.4, "rain": 0, "humidity": 72, "date": "2024-11-06", "level_warning": "M\\u1ee9c 1"}, {"stage": "Tr\\u1ee9ng", "stage_id": "61b59d63-79ff-4959-b34b-18c30f3fb5ae", "temp": 24.3, "rain": 0, "humidity": 64, "date": "2024-11-07"}, {"stage": "S\\u00e2u non 1", "stage_id": "770a750d-dafd-4505-9061-2a788e0df68d", "temp": 22.8, "rain": 0, "humidity": 69, "date": "2024-11-08"}, {"stage": "S\\u00e2u non 1", "stage_id": "770a750d-dafd-4505-9061-2a788e0df68d", "temp": 22.2, "rain": 0, "humidity": 71, "date": "2024-11-09"}, {"stage": "S\\u00e2u non 1", "stage_id": "770a750d-dafd-4505-9061-2a788e0df68d", "temp": 23.3, "rain": 0, "humidity": 72, "date": "2024-11-10"}, {"stage": "S\\u00e2u non 1", "stage_id": "770a750d-dafd-4505-9061-2a788e0df68d", "temp": 24.5, "rain": 0, "humidity": 70, "date": "2024-11-11"}, {"stage": "S\\u00e2u non 2", "stage_id": "052653fa-73e0-4929-b315-9c0cac3315d6", "temp": 25, "rain": 0, "humidity": 72, "date": "2024-11-12", "level_warning": "M\\u1ee9c 2"}, {"stage": "S\\u00e2u non 2", "stage_id": "052653fa-73e0-4929-b315-9c0cac3315d6", "temp": 25, "rain": 0, "humidity": 80, "date": "2024-11-13"}, {"stage": "S\\u00e2u non 3", "stage_id": "6ebafd8c-9a1c-4edf-b618-3e4bcd2fadd5", "temp": 25.6, "rain": 0, "humidity": 79, "date": "2024-11-14"}, {"stage": "S\\u00e2u non 3", "stage_id": "6ebafd8c-9a1c-4edf-b618-3e4bcd2fadd5", "temp": 26.3, "rain": 0.9, "humidity": 78, "date": "2024-11-15"}, {"stage": "S\\u00e2u non 4", "stage_id": "94f7a5bd-a990-455f-862b-23353dcfcbd7", "temp": 26.6, "rain": 0, "humidity": 76, "date": "2024-11-16"}, {"stage": "S\\u00e2u non 4", "stage_id": "94f7a5bd-a990-455f-862b-23353dcfcbd7", "temp": 26.7, "rain": 0, "humidity": 76, "date": "2024-11-17"}, {"stage": "S\\u00e2u non 5", "stage_id": "beff4119-33ce-4af2-af21-23c405308c01", "temp": 26.6, "rain": 0, "humidity": 74, "date": "2024-11-18"}, {"stage": "S\\u00e2u non 5", "stage_id": "beff4119-33ce-4af2-af21-23c405308c01", "temp": 25.8, "rain": 2.1, "humidity": 77, "date": "2024-11-19"}, {"stage": "S\\u00e2u non 5", "stage_id": "beff4119-33ce-4af2-af21-23c405308c01", "temp": 25.2, "rain": 0, "humidity": 73, "date": "2024-11-20"}, {"stage": "S\\u00e2u non 6", "stage_id": "1000eeb2-d8e3-4f29-b9f7-51d768eff2f8", "temp": 25.2, "rain": 0, "humidity": 68, "date": "2024-11-21"}]', '2024-11-01 21:19:25', 'Trần Thế Anhh', '2024-11-07 07:12:54', 'USER UPDATE');

-- 
-- Dumping data for table pest_stage
--
INSERT INTO pest_stage VALUES
('052653fa-73e0-4929-b315-9c0cac3315d6', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu non 2', 10.52, 36.03, 140.76),
('1000eeb2-d8e3-4f29-b9f7-51d768eff2f8', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu non 6', 13.35, 37.59, 280.99),
('3000eeb2-d8e3-4f29-b9f7-51d768eff2f8', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Sâu non 6', 14, 51, 233),
('31b59d63-79ff-4959-b34b-18c30f3fb5ae', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Trứng', 15, 38, 38),
('3205cce3-f35d-4378-a820-b2bd681e2205', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Nhộng', 13, 114, 347),
('34f7a5bd-a990-455f-862b-23353dcfcbd7', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Sâu non 4', 14, 24, 142),
('352653fa-73e0-4929-b315-9c0cac3315d6', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Sâu non 2', 14, 20, 95),
('370a750d-dafd-4505-9061-2a788e0df68d', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Sâu non 1', 14, 37, 75),
('3ebafd8c-9a1c-4edf-b618-3e4bcd2fadd5', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Sâu non 3', 14, 23, 118),
('3eff4119-33ce-4af2-af21-23c405308c01', 'cd401245-e815-40ff-a51e-fbe3b8218888', 'Sâu non 5', 14, 40, 182),
('5205cce3-f35d-4378-a820-b2bd681e2205', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Nhộng', 13.91, 148.86, 429.85),
('61b59d63-79ff-4959-b34b-18c30f3fb5ae', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Trứng', 11.5, 42.9, 42.9),
('6ebafd8c-9a1c-4edf-b618-3e4bcd2fadd5', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu non 3', 13.08, 28.51, 169.27),
('770a750d-dafd-4505-9061-2a788e0df68d', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu non 1', 5.18, 61.83, 104.73),
('94f7a5bd-a990-455f-862b-23353dcfcbd7', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu non 4', 11.23, 33.59, 202.86),
('b234505f-438a-4e7f-8295-90d5c19db408', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Trưởng thành', 15, 64.27, 494.12),
('beff4119-33ce-4af2-af21-23c405308c01', 'cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu non 5', 11.06, 40.54, 243.4);

-- 
-- Dumping data for table pest
--
INSERT INTO pest VALUES
('cd401245-e815-40ff-a51e-fbe3b8218b32', 'Sâu keo mùa thu', 'FAW', 'Fall Armyworm (Spodoptera frugiperda) là một loại sâu bọ có nguồn gốc từ châu Mỹ nhưng đã lan rộng ra nhiều khu vực khác, bao gồm châu Phi và châu Á. Đây là một trong những loài sâu bọ gây hại nghiêm trọng cho nhiều loại cây trồng, đặc biệt là ngô, lúa mì, và các loại rau quả.', 'encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRmNMqZbHYB0Jfiq9VnCRwORSSkhu2eytCJRFM5zLx9zEhH3fop;thebeatsheet.com.au/wp-content/uploads/2020/11/FAW-IDpoints-June20.png');

-- 
-- Dumping data for table level_warning
--
INSERT INTO level_warning VALUES
('347a04c3-cc03-4bda-94bb-965de90d0401', 'Mức 2', 'f4c768f6-885a-49c3-96a1-4916fcc59964', '052653fa-73e0-4929-b315-9c0cac3315d6', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0402', 'Mức 2', '6b0025cb-7e13-4f50-9008-69e46e283c86', '052653fa-73e0-4929-b315-9c0cac3315d6', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0403', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '052653fa-73e0-4929-b315-9c0cac3315d6', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0404', 'Mức 3', 'f4c768f6-885a-49c3-96a1-4916fcc59964', '1000eeb2-d8e3-4f29-b9f7-51d768eff2f8', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0405', 'Mức 3', '6b0025cb-7e13-4f50-9008-69e46e283c86', '1000eeb2-d8e3-4f29-b9f7-51d768eff2f8', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0406', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '1000eeb2-d8e3-4f29-b9f7-51d768eff2f8', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0407', 'Mức 1', 'f4c768f6-885a-49c3-96a1-4916fcc59964', '5205cce3-f35d-4378-a820-b2bd681e2205', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0408', 'Mức 1', '6b0025cb-7e13-4f50-9008-69e46e283c86', '5205cce3-f35d-4378-a820-b2bd681e2205', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0409', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '5205cce3-f35d-4378-a820-b2bd681e2205', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0410', 'Mức 1', 'f4c768f6-885a-49c3-96a1-4916fcc59964', '61b59d63-79ff-4959-b34b-18c30f3fb5ae', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0411', 'Mức 1', '6b0025cb-7e13-4f50-9008-69e46e283c86', '61b59d63-79ff-4959-b34b-18c30f3fb5ae', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0412', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '61b59d63-79ff-4959-b34b-18c30f3fb5ae', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0413', 'Mức 2', 'f4c768f6-885a-49c3-96a1-4916fcc59964', '6ebafd8c-9a1c-4edf-b618-3e4bcd2fadd5', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0414', 'Mức 2', '6b0025cb-7e13-4f50-9008-69e46e283c86', '6ebafd8c-9a1c-4edf-b618-3e4bcd2fadd5', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0415', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '6ebafd8c-9a1c-4edf-b618-3e4bcd2fadd5', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0416', 'Mức 1', 'f4c768f6-885a-49c3-96a1-4916fcc59964', '770a750d-dafd-4505-9061-2a788e0df68d', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0417', 'Mức 1', '6b0025cb-7e13-4f50-9008-69e46e283c86', '770a750d-dafd-4505-9061-2a788e0df68d', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0418', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '770a750d-dafd-4505-9061-2a788e0df68d', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0419', 'Mức 3', 'f4c768f6-885a-49c3-96a1-4916fcc59964', '94f7a5bd-a990-455f-862b-23353dcfcbd7', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0420', 'Mức 3', '6b0025cb-7e13-4f50-9008-69e46e283c86', '94f7a5bd-a990-455f-862b-23353dcfcbd7', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0421', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '94f7a5bd-a990-455f-862b-23353dcfcbd7', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0422', 'Mức 3', 'f4c768f6-885a-49c3-96a1-4916fcc59964', 'beff4119-33ce-4af2-af21-23c405308c01', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0423', 'Mức 3', '6b0025cb-7e13-4f50-9008-69e46e283c86', 'beff4119-33ce-4af2-af21-23c405308c01', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1'),
('347a04c3-cc03-4bda-94bb-965de90d0424', 'Mức 1', '5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', 'beff4119-33ce-4af2-af21-23c405308c01', 'cd401245-e815-40ff-a51e-fbe3b8218b32', '961f6ec9-8959-42f6-a558-a774a4afa7a1');

-- 
-- Dumping data for table crop_stage
--
INSERT INTO crop_stage VALUES
('5dd69ca8-ca71-43a1-83ed-d0a1a0e47fab', '961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây trưởng thành'),
('6b0025cb-7e13-4f50-9008-69e46e283c86', '961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây con'),
('f4c768f6-885a-49c3-96a1-4916fcc59964', '961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây non');

-- 
-- Dumping data for table crop
--
INSERT INTO crop VALUES
('961f6ec9-8959-42f6-a558-a774a4afa7a1', 'Cây ngô', 'Ngô', 'Ngô, bắp hay bẹ (danh pháp hai phần: Zea mays L. ssp. mays), là một loại cây lương thực được thuần canh tại khu vực Trung Mỹ và sau đó lan tỏa ra khắp châu Mỹ. Ngô lan tỏa ra phần còn lại của thế giới sau khi có tiếp xúc của người châu Âu với châu Mỹ vào cuối thế kỷ 15, đầu thế kỷ 16. Ngô là cây lương thực được gieo trồng nhiều nhất tại châu Mỹ (chỉ riêng tại Hoa Kỳ thì sản lượng đã là khoảng 270 triệu tấn mỗi năm).', 'encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTSQTwY5H90hpRERbth6Y70s48hYKQQ3EimRbhVpGTe_zCHc0II');

--
-- Restore previous SQL mode
--
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

--
-- Enable foreign keys
--
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;